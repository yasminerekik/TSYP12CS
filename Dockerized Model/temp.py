from fastapi import FastAPI
import requests
from pydantic import BaseModel
import pandas as pd
import catboost

data = {
    'Destination_Port': 443,
    'Flow_Duration': 1000000,
    'Total_Fwd_Packets': 2000,
    'Total_Backward_Packets': 1500,
    'Total_Length_of_Fwd_Packets': 50000,
    'Total_Length_of_Bwd_Packets': 30000,
    'Fwd_Packet_Length_Max': 1000,
    'Fwd_Packet_Length_Min': 40,
    'Fwd_Packet_Length_Mean': 500.0,
    'Fwd_Packet_Length_Std': 100.0,
    'Bwd_Packet_Length_Max': 1000,
    'Bwd_Packet_Length_Min': 40,
    'Bwd_Packet_Length_Mean': 500.0,
    'Bwd_Packet_Length_Std': 100.0,
    'Flow_Bytes_per_s': 100000.0,
    'Flow_Packets_per_s': 500.0,
    'Flow_IAT_Mean': 1000.0,
    'Flow_IAT_Std': 50.0,
    'Flow_IAT_Max': 1500,
    'Flow_IAT_Min': 30,
    'Fwd_IAT_Total': 8000,
    'Fwd_IAT_Mean': 200.0,
    'Fwd_IAT_Std': 50.0,
    'Fwd_IAT_Max': 1200,
    'Fwd_IAT_Min': 10,
    'Bwd_IAT_Total': 7000,
    'Bwd_IAT_Mean': 180.0,
    'Bwd_IAT_Std': 60.0,
    'Bwd_IAT_Max': 1100,
    'Bwd_IAT_Min': 15,
    'Fwd_PSH_Flags': 0,
    'Bwd_PSH_Flags': 0,
    'Fwd_URG_Flags': 0.0,
    'Bwd_URG_Flags': 0.0,
    'Fwd_Header_Length': 50.0,
    'Bwd_Header_Length': 50.0,
    'Fwd_Packets_per_s': 400.0,
    'Bwd_Packets_per_s': 300.0,
    'Min_Packet_Length': 40.0,
    'Max_Packet_Length': 1200.0,
    'Packet_Length_Mean': 620.0,
    'Packet_Length_Std': 50.0,
    'Packet_Length_Variance': 3000.0,
    'FIN_Flag_Count': 1.0,
    'SYN_Flag_Count': 1.0,
    'RST_Flag_Count': 0.0,
    'PSH_Flag_Count': 0.0,
    'ACK_Flag_Count': 1.0,
    'URG_Flag_Count': 0.0,
    'CWE_Flag_Count': 0.0,
    'ECE_Flag_Count': 0.0,
    'Down_Up_Ratio': 2.0,
    'Average_Packet_Size': 620.0,
    'Avg_Fwd_Segment_Size': 500.0,
    'Avg_Bwd_Segment_Size': 400.0,
    'Fwd_Header_Length_1': 50.0,
    'Fwd_Avg_Bytes_Bulk': 0.0,
    'Fwd_Avg_Packets_Bulk': 0.0,
    'Fwd_Avg_Bulk_Rate': 0.0,
    'Bwd_Avg_Bytes_Bulk': 0.0,
    'Bwd_Avg_Packets_Bulk': 0.0,
    'Bwd_Avg_Bulk_Rate': 0.0,
    'Subflow_Fwd_Packets': 1000.0,
    'Subflow_Fwd_Bytes': 8000.0,
    'Subflow_Bwd_Packets': 800.0,
    'Subflow_Bwd_Bytes': 7000.0,
    'Init_Win_bytes_forward': 8192.0,
    'Init_Win_bytes_backward': 8192.0,
    'act_data_pkt_fwd': 200.0,
    'min_seg_size_forward': 20.0,
    'Active_Mean': 100.0,
    'Active_Std': 20.0,
    'Active_Max': 200.0,
    'Active_Min': 10.0,
    'Idle_Mean': 5000.0,
    'Idle_Std': 1000.0,
    'Idle_Max': 8000.0,
    'Idle_Min': 50.0
}

#model = catboost.CatBoostClassifier.load_model("my_ddos_model")
responce = requests.post("http://127.0.0.1:8000/predict",json=data)
print(responce.json())